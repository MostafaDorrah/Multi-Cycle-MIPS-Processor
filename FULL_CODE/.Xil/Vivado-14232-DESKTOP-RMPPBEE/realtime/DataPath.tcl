# 
# Synthesis run script generated by Vivado
# 

namespace eval rt {
    variable rc
}
set rt::rc [catch {
  uplevel #0 {
    set ::env(BUILTIN_SYNTH) true
    source $::env(HRT_TCL_PATH)/rtSynthPrep.tcl
    rt::HARTNDb_resetJobStats
    rt::HARTNDb_startJobStats
    set rt::cmdEcho 0
    rt::set_parameter writeXmsg true
    rt::set_parameter enableParallelHelperSpawn true
    set ::env(RT_TMP) "C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/.Xil/Vivado-14232-DESKTOP-RMPPBEE/realtime/tmp"
    if { [ info exists ::env(RT_TMP) ] } {
      file delete -force $::env(RT_TMP)
      file mkdir $::env(RT_TMP)
    }

    rt::delete_design

    set rt::partid xc7a35tcsg325-2L

    set rt::multiChipSynthesisFlow false
    source $::env(SYNTH_COMMON)/common.tcl
    set rt::defaultWorkLibName xil_defaultlib

    set rt::useElabCache false
    if {$rt::useElabCache == false} {
      rt::read_verilog {
      {C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/Lec_Project.srcs/sources_1/new/Write_to_reg_Mux.v}
      {C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/Lec_Project.srcs/sources_1/new/Sign_Extend.v}
      {C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/Lec_Project.srcs/sources_1/new/Reg_out_R.v}
      {C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/Lec_Project.srcs/sources_1/new/Register_File.v}
      {C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/Lec_Project.srcs/sources_1/new/Read_1_OR_3_Mux.v}
      {C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/Lec_Project.srcs/sources_1/new/PC_Mux.v}
      {C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/Lec_Project.srcs/sources_1/new/PC.v}
      {C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/Lec_Project.srcs/sources_1/new/Instruction_Register.v}
      {C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/Lec_Project.srcs/sources_1/new/Instruction_Memory.v}
      {C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/Lec_Project.srcs/sources_1/new/Data_Memory_Reg.v}
      {C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/Lec_Project.srcs/sources_1/new/Data_Memory.v}
      {C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/Lec_Project.srcs/sources_1/new/Control_Unit.v}
      {C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/Lec_Project.srcs/sources_1/new/ALU_reg.v}
      {C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/Lec_Project.srcs/sources_1/new/ALU_B_Mux.v}
      {C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/Lec_Project.srcs/sources_1/new/ALU_A_Mux.v}
      {C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/Lec_Project.srcs/sources_1/new/ALU.v}
      {C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/Lec_Project.srcs/sources_1/new/DataPath.v}
    }
      rt::filesetChecksum
    }
    rt::set_parameter usePostFindUniquification false
    set rt::top DataPath
    set rt::reportTiming false
    rt::set_parameter elaborateOnly true
    rt::set_parameter elaborateRtl true
    rt::set_parameter eliminateRedundantBitOperator false
    rt::set_parameter writeBlackboxInterface true
    rt::set_parameter merge_flipflops true
    rt::set_parameter srlDepthThreshold 3
    rt::set_parameter rstSrlDepthThreshold 4
# MODE: 
    rt::set_parameter webTalkPath {}
    rt::set_parameter enableSplitFlowPath "C:/Users/Mostafa/Desktop/computer arc/LEC_Project/FULL_CODE/.Xil/Vivado-14232-DESKTOP-RMPPBEE/"
    set ok_to_delete_rt_tmp true 
    if { [rt::get_parameter parallelDebug] } { 
       set ok_to_delete_rt_tmp false 
    } 
    if {$rt::useElabCache == false} {
      rt::run_rtlelab -module $rt::top
    }

    set rt::flowresult [ source $::env(SYNTH_COMMON)/flow.tcl ]
    rt::HARTNDb_stopJobStats
    if { $rt::flowresult == 1 } { return -code error }

    if { [ info exists ::env(RT_TMP) ] } {
      if { [info exists ok_to_delete_rt_tmp] && $ok_to_delete_rt_tmp } { 
        file delete -force $::env(RT_TMP)
      }
    }


  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] && [info exists rt::doParallel] && $rt::doParallel} { 
     $rt::db killSynthHelper $hsKey
  } 
  rt::set_parameter helper_shm_key "" 
    source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  } ; #end uplevel
} rt::result]

if { $rt::rc } {
  $rt::db resetHdlParse
  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] && [info exists rt::doParallel] && $rt::doParallel} { 
     $rt::db killSynthHelper $hsKey
  } 
  source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  return -code "error" $rt::result
}
